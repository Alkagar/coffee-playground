// Generated by CoffeeScript 1.3.3
(function() {

  (function($, window) {
    var Plugin, defaults, document, pluginName;
    pluginName = 'AHider';
    document = window.document;
    defaults = {
      showText: '[ show ]',
      hideText: '[ hide ]',
      toggleButtonClass: 'a-hider-button',
      toggleBoxClass: 'a-hider-box',
      defaultState: 'hidden',
      hiddenClass: 'a-hider-hidden',
      visibleClass: 'a-hider-visible'
    };
    Plugin = (function() {

      function Plugin(element, options) {
        this.element = element;
        if (options == null) {
          options = {};
        }
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
      }

      Plugin.prototype.init = function() {
        return $(this).each(function() {
          var container, options, self, toggleBox, toggleButton;
          options = this.options;
          self = this;
          container = this.element;
          toggleButton = container.find('.' + options.toggleButtonClass);
          toggleButton.css('cursor', 'pointer');
          toggleBox = container.find('.' + options.toggleBoxClass);
          if (options.defaultState === 'hidden') {
            toggleButton.addClass(options.hiddenClass).text(options.showText);
            toggleBox.hide();
          } else {
            toggleButton.addClass(options.visibleClass).text(options.hideText);
            toggleBox.show();
          }
          return toggleButton.on('click', function() {
            toggleBox = $(this).siblings('.' + options.toggleBoxClass);
            $(this).toggleClass(options.hiddenClass).toggleClass(options.visibleClass);
            toggleBox.toggle('slow');
            if ($(this).is('.' + options.hiddenClass)) {
              return $(this).text(options.showText);
            } else {
              return $(this).text(options.hideText);
            }
          });
        });
      };

      return Plugin;

    })();
    return $.fn[pluginName] = function(options) {
      if (options == null) {
        options = {};
      }
      return this.each(function() {
        if (!$.data(this, "plugin_" + pluginName)) {
          return $.data($(this), "plugin_" + pluginName, new Plugin($(this), options));
        }
      });
    };
  })(jQuery, window);

}).call(this);
